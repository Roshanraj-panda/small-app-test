// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package generated

case class PersonInfoBillTo(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val AddressLine1 = attributes.get("@AddressLine1") map { _.as[String]}
  lazy val City = attributes.get("@City") map { _.as[String]}
  lazy val Country = attributes.get("@Country") map { _.as[String]}
  lazy val DayPhone = attributes.get("@DayPhone") map { _.as[Int]}
  lazy val EMailID = attributes.get("@EMailID") map { _.as[String]}
  lazy val FirstName = attributes.get("@FirstName") map { _.as[String]}
  lazy val LastName = attributes.get("@LastName") map { _.as[String]}
  lazy val State = attributes.get("@State") map { _.as[String]}
  lazy val ZipCode = attributes.get("@ZipCode") map { _.as[String]}
}

      


case class PersonInfoShipTo(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val AddressLine1 = attributes.get("@AddressLine1") map { _.as[String]}
  lazy val AddressLine2 = attributes.get("@AddressLine2") map { _.as[String]}
  lazy val City = attributes.get("@City") map { _.as[String]}
  lazy val Country = attributes.get("@Country") map { _.as[String]}
  lazy val DayPhone = attributes.get("@DayPhone") map { _.as[Int]}
  lazy val EMailID = attributes.get("@EMailID") map { _.as[String]}
  lazy val FirstName = attributes.get("@FirstName") map { _.as[String]}
  lazy val LastName = attributes.get("@LastName") map { _.as[String]}
  lazy val State = attributes.get("@State") map { _.as[String]}
  lazy val ZipCode = attributes.get("@ZipCode") map { _.as[String]}
}

      


case class Item(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val CustomerItemDesc = attributes.get("@CustomerItemDesc") map { _.as[String]}
  lazy val ItemID = attributes.get("@ItemID") map { _.as[Int]}
  lazy val ProductLine = attributes.get("@ProductLine") map { _.as[Byte]}
  lazy val UnitOfMeasure = attributes.get("@UnitOfMeasure") map { _.as[String]}
}

      


case class PersonInfoShipTo2(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val AddressLine1 = attributes.get("@AddressLine1") map { _.as[String]}
  lazy val AddressLine2 = attributes.get("@AddressLine2") map { _.as[String]}
  lazy val City = attributes.get("@City") map { _.as[String]}
  lazy val Country = attributes.get("@Country") map { _.as[String]}
  lazy val DayPhone = attributes.get("@DayPhone") map { _.as[Int]}
  lazy val EMailID = attributes.get("@EMailID") map { _.as[String]}
  lazy val FirstName = attributes.get("@FirstName") map { _.as[String]}
  lazy val LastName = attributes.get("@LastName") map { _.as[String]}
  lazy val State = attributes.get("@State") map { _.as[String]}
  lazy val ZipCode = attributes.get("@ZipCode") map { _.as[String]}
}

      


case class LinePriceInfo(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val IsLinePriceForInformationOnly = attributes.get("@IsLinePriceForInformationOnly") map { _.as[String]}
  lazy val ListPrice = attributes.get("@ListPrice") map { _.as[Float]}
  lazy val PricingQuantityStrategy = attributes.get("@PricingQuantityStrategy") map { _.as[String]}
  lazy val RetailPrice = attributes.get("@RetailPrice") map { _.as[Float]}
  lazy val UnitPrice = attributes.get("@UnitPrice") map { _.as[Float]}
}

      


case class LineCharge(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val ChargeCategory = attributes.get("@ChargeCategory") map { _.as[String]}
  lazy val ChargeName = attributes.get("@ChargeName") map { _.as[String]}
  lazy val ChargePerLine = attributes.get("@ChargePerLine") map { _.as[Float]}
}

      


case class LineCharges(LineCharge: Seq[generated.LineCharge] = Nil)
      


case class LineTax(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val ChargeCategory = attributes.get("@ChargeCategory") map { _.as[String]}
  lazy val ChargeName = attributes.get("@ChargeName") map { _.as[String]}
  lazy val Tax = attributes.get("@Tax") map { _.as[Float]}
  lazy val TaxName = attributes.get("@TaxName") map { _.as[String]}
  lazy val TaxPercentage = attributes.get("@TaxPercentage") map { _.as[Float]}
}

      


case class LineTaxes(LineTax: Seq[generated.LineTax] = Nil)
      


case class OrderDate(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val ActualDate = attributes.get("@ActualDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val DateTypeId = attributes.get("@DateTypeId") map { _.as[String]}
}

      


case class OrderDates(OrderDate: generated.OrderDate)
      


case class Extn(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val ExtnIsPromoEvaluated = attributes.get("@ExtnIsPromoEvaluated") map { _.as[String]}
  lazy val ExtnIsReturnable = attributes.get("@ExtnIsReturnable") map { _.as[String]}
  lazy val ExtnWebLineNumber = attributes.get("@ExtnWebLineNumber") map { _.as[Byte]}
}

      


case class OrderLine(Item: generated.Item,
  PersonInfoShipTo: generated.PersonInfoShipTo2,
  LinePriceInfo: generated.LinePriceInfo,
  LineCharges: generated.LineCharges,
  LineTaxes: generated.LineTaxes,
  OrderDates: generated.OrderDates,
  Extn: generated.Extn,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val CarrierServiceCode = attributes.get("@CarrierServiceCode") map { _.as[String]}
  lazy val DeliveryMethod = attributes.get("@DeliveryMethod") map { _.as[String]}
  lazy val FulfillmentType = attributes.get("@FulfillmentType") map { _.as[String]}
  lazy val GiftFlag = attributes.get("@GiftFlag") map { _.as[String]}
  lazy val GiftWrap = attributes.get("@GiftWrap") map { _.as[String]}
  lazy val LineType = attributes.get("@LineType") map { _.as[String]}
  lazy val OrderedQty = attributes.get("@OrderedQty") map { _.as[Byte]}
  lazy val PrimeLineNo = attributes.get("@PrimeLineNo") map { _.as[Byte]}
  lazy val SCAC = attributes.get("@SCAC") map { _.as[String]}
  lazy val ShipNode = attributes.get("@ShipNode") map { _.as[String]}
  lazy val SubLineNo = attributes.get("@SubLineNo") map { _.as[Byte]}
}

      


case class OrderLines(OrderLine: Seq[generated.OrderLine] = Nil)
      


case class PaymentDetails(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val AuthAvs = attributes.get("@AuthAvs") map { _.as[String]}
  lazy val AuthReturnCode = attributes.get("@AuthReturnCode") map { _.as[Byte]}
  lazy val AuthorizationExpirationDate = attributes.get("@AuthorizationExpirationDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val AuthorizationID = attributes.get("@AuthorizationID") map { _.as[Int]}
  lazy val ChargeType = attributes.get("@ChargeType") map { _.as[String]}
  lazy val ProcessedAmount = attributes.get("@ProcessedAmount") map { _.as[Float]}
  lazy val Reference1 = attributes.get("@Reference1") map { _.as[String]}
  lazy val Reference2 = attributes.get("@Reference2") map { _.as[String]}
  lazy val RequestAmount = attributes.get("@RequestAmount") map { _.as[Float]}
  lazy val TranReturnMessage = attributes.get("@TranReturnMessage") map { _.as[String]}
}

      


case class PersonInfoBillTo2(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val AddressLine1 = attributes.get("@AddressLine1") map { _.as[String]}
  lazy val AddressLine2 = attributes.get("@AddressLine2") map { _.as[String]}
  lazy val City = attributes.get("@City") map { _.as[String]}
  lazy val Country = attributes.get("@Country") map { _.as[String]}
  lazy val DayPhone = attributes.get("@DayPhone") map { _.as[Int]}
  lazy val EMailID = attributes.get("@EMailID") map { _.as[String]}
  lazy val FirstName = attributes.get("@FirstName") map { _.as[String]}
  lazy val LastName = attributes.get("@LastName") map { _.as[String]}
  lazy val State = attributes.get("@State") map { _.as[String]}
  lazy val ZipCode = attributes.get("@ZipCode") map { _.as[String]}
}

      


case class PaymentMethod(PaymentDetails: generated.PaymentDetails,
  PersonInfoBillTo: generated.PersonInfoBillTo2,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val ChargeSequence = attributes.get("@ChargeSequence") map { _.as[Byte]}
  lazy val CreditCardExpDate = attributes.get("@CreditCardExpDate") map { _.as[String]}
  lazy val CreditCardName = attributes.get("@CreditCardName") map { _.as[String]}
  lazy val CreditCardNo = attributes.get("@CreditCardNo") map { _.as[Long]}
  lazy val CreditCardType = attributes.get("@CreditCardType") map { _.as[String]}
  lazy val DisplayCardNo = attributes.get("@DisplayCardNo") map { _.as[Short]}
  lazy val DisplayCreditCardNo = attributes.get("@DisplayCreditCardNo") map { _.as[Short]}
  lazy val FirstName = attributes.get("@FirstName") map { _.as[String]}
  lazy val LastName = attributes.get("@LastName") map { _.as[String]}
  lazy val MaxChargeLimit = attributes.get("@MaxChargeLimit") map { _.as[Float]}
  lazy val PaymentReference1 = attributes.get("@PaymentReference1") map { _.as[Short]}
  lazy val PaymentReference4 = attributes.get("@PaymentReference4") map { _.as[String]}
  lazy val PaymentReference6 = attributes.get("@PaymentReference6") map { _.as[String]}
  lazy val PaymentService = attributes.get("@PaymentService") map { _.as[String]}
  lazy val PaymentType = attributes.get("@PaymentType") map { _.as[String]}
  lazy val UnlimitedCharges = attributes.get("@UnlimitedCharges") map { _.as[String]}
}

      


case class PaymentMethods(PaymentMethod: generated.PaymentMethod)
      


case class OrderHoldType(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val HoldType = attributes.get("@HoldType") map { _.as[String]}
  lazy val ReasonText = attributes.get("@ReasonText") map { _.as[String]}
}

      


case class OrderHoldTypes(OrderHoldType: generated.OrderHoldType)
      


case class HbcOrderHeaderAttr(value: String,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val FraudReference1 = attributes.get("@FraudReference1") map { _.as[String]}
}

      


case class HbcOrderHeaderAttrList(HbcOrderHeaderAttr: generated.HbcOrderHeaderAttr)
      


case class Extn2(HbcOrderHeaderAttrList: generated.HbcOrderHeaderAttrList,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val ExtnAssociateName = attributes.get("@ExtnAssociateName") map { _.as[String]}
  lazy val ExtnClientID = attributes.get("@ExtnClientID") map { _.as[Short]}
  lazy val ExtnCommLang = attributes.get("@ExtnCommLang") map { _.as[String]}
  lazy val ExtnCurrencyCode = attributes.get("@ExtnCurrencyCode") map { _.as[String]}
  lazy val ExtnIsFiftyOne = attributes.get("@ExtnIsFiftyOne") map { _.as[String]}
  lazy val ExtnReference1 = attributes.get("@ExtnReference1") map { _.as[String]}
}

      


case class Order(PersonInfoBillTo: generated.PersonInfoBillTo,
  PersonInfoShipTo: generated.PersonInfoShipTo,
  OrderLines: generated.OrderLines,
  PaymentMethods: generated.PaymentMethods,
  OrderHoldTypes: Option[generated.OrderHoldTypes] = None,
  Extn: generated.Extn2,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val Action = attributes.get("@Action") map { _.as[String]}
  lazy val AllocationRuleID = attributes.get("@AllocationRuleID") map { _.as[String]}
  lazy val AuthorizedClient = attributes.get("@AuthorizedClient") map { _.as[String]}
  lazy val BillToID = attributes.get("@BillToID") map { _.as[Short]}
  lazy val CustomerContactID = attributes.get("@CustomerContactID") map { _.as[Short]}
  lazy val CustomerEMailID = attributes.get("@CustomerEMailID") map { _.as[String]}
  lazy val CustomerFirstName = attributes.get("@CustomerFirstName") map { _.as[String]}
  lazy val CustomerLastName = attributes.get("@CustomerLastName") map { _.as[String]}
  lazy val DocumentType = attributes.get("@DocumentType") map { _.as[Byte]}
  lazy val DraftOrderFlag = attributes.get("@DraftOrderFlag") map { _.as[String]}
  lazy val EnteredBy = attributes.get("@EnteredBy") map { _.as[String]}
  lazy val EnterpriseCode = attributes.get("@EnterpriseCode") map { _.as[String]}
  lazy val EntryType = attributes.get("@EntryType") map { _.as[String]}
  lazy val OrderDate = attributes.get("@OrderDate") map { _.as[javax.xml.datatype.XMLGregorianCalendar]}
  lazy val OrderNo = attributes.get("@OrderNo") map { _.as[Int]}
  lazy val SellerOrganizationCode = attributes.get("@SellerOrganizationCode") map { _.as[String]}
}

      


case class OrderList(Order: Seq[generated.Order] = Nil,
  attributes: Map[String, scalaxb.DataRecord[Any]] = Map()) {
  lazy val TotalNoOfOrders = attributes.get("@TotalNoOfOrders") map { _.as[Byte]}
}

      

